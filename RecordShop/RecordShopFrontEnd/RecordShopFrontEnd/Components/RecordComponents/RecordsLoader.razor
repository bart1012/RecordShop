@rendermode InteractiveServer

@if (isLoading && dbData is null)
{
    <LoadingMessage></LoadingMessage>
}
else if (!isLoading && dbData is null)
{
    <div>There was an issue fetching your data. Please try again.</div>
}
else
{
    <RecordSummaryList albumData="dbData"></RecordSummaryList>
}

@code {
    public List<AlbumDTO> dbData;
    public bool isLoading;
    public bool dbError;

    protected override void OnInitialized()
    {
        isLoading = true;
        dbData = null;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await LoadDataAsync();
    }

    private async Task LoadDataAsync()
    {
        try
        {
            // fetch data from backend API
            HttpClient httpClient = new();
            dbData = await httpClient.GetFromJsonAsync<List<AlbumDTO>>(new Uri("https://localhost:7195/Albums"));

        }
        catch (Exception e)
        {
            dbData = null;
            dbError = true;
        }
        finally
        {
            isLoading = false;
            StateHasChanged(); 
        }
    }
}
